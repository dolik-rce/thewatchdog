Index: Core/Inet.h
===================================================================
--- Core/Inet.h	(revision 6034)
+++ Core/Inet.h	(working copy)
@@ -186,7 +186,7 @@
 	void            Attach(SOCKET socket);
 	bool            Connect(const char *host, int port);
 	bool            Connect(IpAddrInfo& info);
-	bool            Listen(int port, int listen_count = 5, bool ipv6 = false, bool reuse = true);
+	bool            Listen(int port, int listen_count = 5, bool ipv6 = false, bool reuse = true, void* addr = NULL);
 	bool            Accept(TcpSocket& listen_socket);
 	void            Close();
 	void            Shutdown();
Index: Core/Socket.cpp
===================================================================
--- Core/Socket.cpp	(revision 6034)
+++ Core/Socket.cpp	(working copy)
@@ -321,7 +321,7 @@
 	return SetupSocket();
 }
 
-bool TcpSocket::Listen(int port, int listen_count, bool ipv6_, bool reuse)
+bool TcpSocket::Listen(int port, int listen_count, bool ipv6_, bool reuse, void *addr)
 {
 	Close();
 	Init();
@@ -340,15 +340,15 @@
 #endif
 	{
 		Zero(sin6);
-		sin.sin_family = AF_INET6;
-		sin.sin_port = htons(port);
-		sin.sin_addr.s_addr = htonl(INADDR_ANY);
+		sin6.sin6_family = AF_INET6;
+		sin6.sin6_port = htons(port);
+		sin6.sin6_addr = addr?(*(in6_addr*)addr):in6addr_any;
 	}
 	else {
 		Zero(sin);
 		sin.sin_family = AF_INET;
 		sin.sin_port = htons(port);
-		sin.sin_addr.s_addr = htonl(INADDR_ANY);
+		sin.sin_addr.s_addr = addr?(*(uint32*)addr):htonl(INADDR_ANY);
 	}
 	if(reuse) {
 		int optval = 1;
