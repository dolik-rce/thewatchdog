Index: Skylark/App.cpp
===================================================================
--- Skylark/App.cpp	(revision 6034)
+++ Skylark/App.cpp	(working copy)
@@ -186,17 +186,21 @@
 
 	main_pid = getpid();
 	quit = false;
+	
+	IpAddrInfo ipinfo;
+	ipinfo.Execute(ip, port, IpAddrInfo::FAMILY_IPV4);
+	addrinfo *addr = ipinfo.GetResult();
 
 #ifdef _DEBUG
 	int qq = 0;
 	for(;;) {
-		if(server.Listen(port, 5))
+		if(server.Listen(port, 5, false, true, &(((sockaddr_in*)addr->ai_addr)->sin_addr.s_addr)))
 			break;
 		Cout() << "Trying to start listening (other process using the same port?) " << ++qq << "\n";
 		Sleep(1000);
 	}
 #else
-	if(!server.Listen(port, 5)) {
+	if(!server.Listen(port, 5, false, true, &(((sockaddr_in*)addr->ai_addr)->sin_addr.s_addr))) {
 		SKYLARKLOG("Cannot open server socket for listening!");
 		Exit(1);
 	}
@@ -281,6 +285,7 @@
 
 namespace Ini {
 INI_INT(port, 8001, "TCP/IP server port to listen on");
+INI_STRING(ip, "0.0.0.0", "IP address to listen on");
 INI_STRING(path, Nvl(GetEnv("UPP_ASSEMBLY__"), GetFileFolder(GetExeFilePath())), "Path to witz templates and static files");
 INI_INT(threads, 3 * CPU_Cores() + 1, "Number of threads in each Skylark subprocess");
 #ifdef _DEBUG
@@ -305,6 +310,7 @@
 	app = this;
 	threads = Ini::threads;
 	port = Ini::port;
+	ip = Ini::ip;
 	use_caching = Ini::use_caching;
 	prefork = Ini::prefork;
 	timeout = Ini::timeout;
Index: Skylark/Skylark.h
===================================================================
--- Skylark/Skylark.h	(revision 6034)
+++ Skylark/Skylark.h	(working copy)
@@ -44,6 +44,7 @@
 	SkylarkSessionConfig      session;
 	int                       threads;
 	int                       port;
+	String                    ip;
 	int                       prefork;
 	int                       timeout;
 	bool                      use_caching;
